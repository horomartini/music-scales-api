services:
  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    depends_on:
      - apollo
    environment:
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: .template
      REST_PORT: ${REST_PORT}
      APOLLO_PORT: ${APOLLO_PORT}
    ports:
      - 127.0.0.1:${NGINX_PASSTHROUGH_PORT}:80
    networks:
      - public-network

  rest:
    container_name: rest
    command: npm run dev
    build:
      context: ./rest
      dockerfile: Dockerfile
    depends_on:
      - grpc
    environment:
      PORT: ${REST_PORT}
      NODE_END: development
      GRPC_ADDRESS: grpc:${GRPC_PORT}
    ports:
      - ${REST_PORT}:${REST_PORT}
    volumes:
      - ./shared:/usr/shared
    networks:
      - public-network
    develop:
      watch:
        - action: sync
          path: ./rest/src
          target: /usr/rest/src
          ignore:
            - node_modules/
        - action: rebuild
          path: ./rest/package.json

  apollo:
    container_name: apollo
    command: npm run dev
    build:
      context: ./apollo
      dockerfile: Dockerfile
    depends_on:
      - grpc
    environment:
      PORT: ${APOLLO_PORT}
      NODE_ENV: development
      GRPC_ADDRESS: grpc:${GRPC_PORT}
    ports:
      - ${APOLLO_PORT}:${APOLLO_PORT}
    volumes:
      - ./shared:/usr/shared
    networks:
      - public-network
    develop:
      watch:
        - action: sync
          path: ./apollo/src
          target: /usr/apollo/src
          ignore:
            - node_modules/
        - action: rebuild
          path: ./apollo/package.json

  grpc:
    container_name: grpc
    command: npm run dev
    build:
      context: ./grpc
      dockerfile: Dockerfile
    depends_on:
      - mongo
    environment:
      PORT: ${GRPC_PORT}
      MONGO_URI: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:${MONGO_PORT}/${MONGO_DATABASE}?authSource=admin
    ports:
      - "${GRPC_PORT}:${GRPC_PORT}"
    volumes:
      - ./shared:/usr/shared
    networks:
      - public-network
      - database-network
    develop:
      watch:
        - action: sync
          path: ./grpc/src
          target: /usr/grpc/src
          ignore:
            - node_modules/
        - action: rebuild
          path: ./grpc/package.json

  mongo:
    container_name: mongo
    build:
      context: ./mongo
      dockerfile: Dockerfile
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongo-data:/data/db
    networks:
      - database-network

volumes:
  shared:
  mongo-data:

networks:
  public-network:
    driver: bridge
  database-network:
    driver: bridge 
